services:
  payment-processor-default:
    image: zanfranceschi/payment-processor:amd64-20250807222453
    container_name: payment-processor-default
    hostname: payment-processor-default
    environment:
      - TRANSACTION_FEE=0.07
      - RATE_LIMIT_SECONDS=5
      - INITIAL_TOKEN=123
      - DB_CONNECTION_STRING=Host=/var/run/postgresql;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=15;Maximum Pool Size=20;Connection Pruning Interval=3
    ports:
      - 8001:8080
    volumes:
      - postgres-socket-01:/var/run/postgresql
    depends_on:
      - payment-processor-default-db
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100M"

  payment-processor-default-db:
    image: postgres:17-alpine
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    container_name: payment-processor-default-db
    hostname: payment-processor-default-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    volumes:
      - ./rinha-de-backend-2025/payment-processor/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-socket-01:/var/run/postgresql
    networks:
      - payment-processor-db
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100M"

  payment-processor-fallback:
    image: zanfranceschi/payment-processor:amd64-20250807222453
    container_name: payment-processor-fallback
    hostname: payment-processor-fallback
    environment:
      - TRANSACTION_FEE=0.10
      - RATE_LIMIT_SECONDS=5
      - INITIAL_TOKEN=123
      - DB_CONNECTION_STRING=Host=/var/run/postgresql;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=15;Maximum Pool Size=20;Connection Pruning Interval=3
    ports:
      - 8002:8080
    volumes:
      - postgres-socket-02:/var/run/postgresql
    depends_on:
      - payment-processor-fallback-db
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100M"

  payment-processor-fallback-db:
    image: postgres:17-alpine
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    container_name: payment-processor-fallback-db
    hostname: payment-processor-fallback-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    volumes:
      - ./rinha-de-backend-2025/payment-processor/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-socket-02:/var/run/postgresql
    networks:
      - payment-processor-db
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100M"

  lb:
    image: nginx:1.27-alpine
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "9999:9999"
    depends_on:
      - api-1
      - api-2
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "50M"

  api-1: &api
    build: .
    environment:
      PORT: "9999"
      UPSTREAM_A_URL: "http://payment-processor-default:8080"  # Payment processor oficial
      UPSTREAM_B_URL: "http://payment-processor-fallback:8080"  # Payment processor oficial
      UPSTREAM_PAY_PATH: "/payments"
      AUTH_HEADER_NAME: "Authorization"
      AUTH_HEADER_VALUE: "Bearer 123"
      REQUEST_TIMEOUT_MS: "50"    # Reduzido drasticamente de 1000ms para 50ms
      HEDGE_DELAY_MS: "5"         # Reduzido de 100ms para 5ms
      CONCURRENCY_LIMIT: "2048"   # Aumentado de 256 para 2048
      CB_FAIL_RATE: "0.5"         # Aumentado de 0.25 para 0.5 (mais tolerante)
      CB_MIN_SAMPLES: "20"        # Reduzido de 50 para 20 (mais responsivo)
      CB_OPEN_SECS: "1"           # Reduzido de 2 para 1 segundo
    depends_on:
      - payment-processor-default
      - payment-processor-fallback
    networks:
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "1.0"             # Aumentado de 0.4 para 1.0 CPU
          memory: "200M"          # Aumentado de 100M para 200M

  api-2:
    <<: *api
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100M"

networks:
  payment-processor:
    driver: bridge
  payment-processor-db:
    driver: bridge

volumes:
  postgres-socket-01:
  postgres-socket-02:
